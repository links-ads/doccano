version: "3.7"
services:

  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.prod
    image: doccano_backend:prod
    volumes:
      - static_volume:/backend/staticfiles
      - media:/backend/media
      - tmp_file:/backend/filepond-temp-uploads
    environment:
      ADMIN_USERNAME: "admin"
      ADMIN_PASSWORD: "DoccanoAix"
      ADMIN_EMAIL: "giacomo.blanco@linksfoundation.com"
      CELERY_BROKER_URL: "amqp://doccano:doccano@rabbitmq"
      DATABASE_URL: "postgres://doccano:doccano@postgres:5432/doccano?sslmode=disable"
      ALLOW_SIGNUP: "False"
      DEBUG: "False"
      CSRF_TRUSTED_ORIGINS: "http://localhost:3001"
      DJANGO_SETTINGS_MODULE: "config.settings.production"
    depends_on:
      - postgres
    networks:
      - network-backend
      - network-frontend

  celery:
    build:
      context: ..
      dockerfile: docker/Dockerfile.prod
    image: doccano_celery:prod
    volumes:
      - media:/backend/media
      - tmp_file:/backend/filepond-temp-uploads
    entrypoint: ["/opt/bin/prod-celery.sh"]
    environment:
      PYTHONUNBUFFERED: "1"
      CELERY_BROKER_URL: "amqp://doccano:doccano@rabbitmq"
      DATABASE_URL: "postgres://doccano:doccano@postgres:5432/doccano?sslmode=disable"
      DJANGO_SETTINGS_MODULE: "config.settings.production"
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - network-backend

  rabbitmq:
    image: rabbitmq:3.8-alpine
    environment:
      RABBITMQ_DEFAULT_USER: "doccano"
      RABBITMQ_DEFAULT_PASS: "doccano"
    ports:
      - 15672:5672
    networks:
      - network-backend

  nginx:
    build:
      context: ..
      dockerfile: docker/Dockerfile.nginx
    environment:
      API_URL: "http://backend:8000"
      GOOGLE_TRACKING_ID: ""
    volumes:
      - static_volume:/static
      - media:/media
    ports:
      - 127.0.0.1:3001:8080
    depends_on:
      - backend
    networks:
      - network-frontend

  postgres:
    image: postgres:13.3-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: "doccano"
      POSTGRES_PASSWORD: "doccano"
      POSTGRES_DB: "doccano"
    networks:
      - network-backend

volumes:
  postgres_data:
  static_volume:
  media:
  tmp_file:

networks:
  network-backend:
  network-frontend:
